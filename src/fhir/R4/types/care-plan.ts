import { Identifier, Reference, CodeableConcept, Period, dateTime, BackboneElement, Annotation, Timing, Quantity, canonical, uri, SimpleQuantity } from "./_basic-types";
import { DomainResource } from "./_resource.types";

export type CarePlan = DomainResource & {
    resourceType: "CarePlan",
    identifier?: Identifier[],
    instantiatesCanonical?: canonical[],
    instantiatesUri?: uri[],
    basedOn?: Reference[],
    replaces?: Reference[],
    partOf?: Reference[],
    status: "draft" | "active" | "on-hold" | "revoked" | "completed" | "entered-in-error" | "unknown",
    intent: "proposal" | "plan" | "order" | "option",
    category?: CodeableConcept[],
    title?: string,
    description?: string,
    subject: Reference,
    encounter?: Reference,
    period?: Period,
    created?: dateTime,
    author?: Reference,
    contributor?: Reference[],
    careTeam?: Reference[],
    addresses?: Reference[],
    supportingInfo?: Reference[],
    goal?: Reference[],
    activity?: (BackboneElement & {
        outcomeCodeableConcept?: CodeableConcept[],
        outcomeReference?: Reference[],
        progress?: Annotation[],
        reference?: Reference,
        detail?: (BackboneElement & {
            kind?: 'Appointment' | 'CommunicationRequest' | 'DeviceRequest' | 'MedicationRequest' | 'NutritionOrder' | 'Task' | 'ServiceRequest' | 'VisionPrescription',
            instantiatesCanonical?: canonical[],
            instantiatesUri?: uri[],
            code?: CodeableConcept,
            reasonCode?: CodeableConcept[],
            reasonReference?: Reference[],
            goal?: Reference[],
            status: "not-started" | "scheduled" | "in-progress" | "on-hold" | "completed" | "cancelled" | "stopped" | "unknown" | "entered-in-error",
            statusReason?: CodeableConcept,
            doNotPerform?: boolean,
            scheduledTiming?: Timing,
            scheduledPeriod?: Period,
            scheduledString?: string,
            location?: Reference,
            performer?: Reference[],
            productCodeableConcept?: CodeableConcept,
            productReference?: Reference,
            dailyAmount?: SimpleQuantity,
            quantity?: SimpleQuantity,
            description?: string,
        }),
    })[],
    note?: Annotation[]
};