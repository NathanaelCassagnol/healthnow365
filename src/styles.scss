// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use 'sass:map';
@use '@angular/material' as mat;
@include mat.core();
@include mat.all-component-typographies();

$primary: mat.define-palette(mat.$light-green-palette);
$accent: mat.define-palette(mat.$teal-palette);
$warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$my-theme: mat.define-light-theme(
  (
    color: (
      primary: $primary,
      accent: $accent,
      warn: $warn,
    ),
  )
);
$my-dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $primary,
      accent: $accent,
      warn: $warn,
    ),
  )
);

@include mat.all-component-bases($my-theme);

@include mat.core-theme($my-theme);
@include mat.expansion-theme($my-theme);
@include mat.autocomplete-theme($my-theme);
@include mat.button-theme($my-theme);
@include mat.fab-theme($my-theme);
@include mat.icon-button-theme($my-theme);
@include mat.checkbox-theme($my-theme);
@include mat.datepicker-theme($my-theme);
@include mat.dialog-theme($my-theme);
@include mat.divider-theme($my-theme);
@include mat.form-field-theme($my-theme);
@include mat.icon-theme($my-theme);
@include mat.input-theme($my-theme);
@include mat.radio-theme($my-theme);
@include mat.select-theme($my-theme);
@include mat.snack-bar-theme($my-theme);
@include mat.progress-bar-theme($my-theme);
@include mat.table-theme($my-theme);
@include mat.tooltip-theme($my-theme);
@include mat.toolbar-theme($my-theme);

// Custom components

$dark-background: #303030;
$dark-surface: rgb(66, 66, 66);
.my-dark-theme {
  @include mat.core-color($my-dark-theme);
  @include mat.expansion-color($my-dark-theme);
  @include mat.autocomplete-color($my-dark-theme);
  @include mat.button-color($my-dark-theme);
  @include mat.fab-color($my-dark-theme);
  @include mat.icon-button-color($my-dark-theme);
  @include mat.checkbox-color($my-dark-theme);
  @include mat.datepicker-color($my-dark-theme);
  @include mat.dialog-color($my-dark-theme);
  @include mat.divider-color($my-dark-theme);
  @include mat.form-field-color($my-dark-theme);
  @include mat.icon-color($my-dark-theme);
  @include mat.input-color($my-dark-theme);
  @include mat.radio-color($my-dark-theme);
  @include mat.select-color($my-dark-theme);
  @include mat.snack-bar-color($my-dark-theme);
  @include mat.progress-bar-color($my-dark-theme);
  @include mat.option-color($my-dark-theme);
  @include mat.table-color($my-dark-theme);
  @include mat.tooltip-color($my-dark-theme);
  @include mat.toolbar-color($my-dark-theme);

  // Custom components
  background-color: $dark-background;
  color: white;
}

body {
  min-height: 100vh;
  margin: 0;
  display: flex;
  flex-direction: column;
}

// Define a mixin to help generate color/palette theme classes
@mixin palette-mixin($base-set, $color-name) {
  $steps: 50, 100, 200, 300, 400, 500, 600, 700, 800, 900;

  @each $lev in $steps {
    .bg-#{$color-name}-#{$lev} {
      background-color: mat.get-color-from-palette($base-set, $lev) !important;
    }

    .color-#{$color-name}-#{$lev} {
      color: mat.get-color-from-palette($base-set, $lev) !important;
    }

    .border-#{$color-name}-#{$lev} {
      border-color: mat.get-color-from-palette($base-set, $lev) !important;
    }
  }
}

// Craft the primary and warn set of colors
@include palette-mixin($primary, 'primary');
@include palette-mixin($warn, 'warn');
@include palette-mixin($accent, 'accent');

[hidden],
.hidden {
  display: none !important;
}

/* Print Styling */
@media screen {
  .only-print {
    display: none !important;
  }
}

@media print {
  .no-print,
  .mat-mdc-raised-button {
    display: none !important;
  }

  .only-print {
    display: block !important;
  }
}

/*#region Margin/Padding Helpers*/
@mixin spacing-helper() {
  $sizes: (
    '-0': 0,
    '-q': 0.25rem,
    '-h': 0.5rem,
    '-hq': 0.75rem,
    '': 1rem,
    '-1': 1rem,
    '-1h': 1.5rem,
    '-2': 2rem,
    '-2h': 2.5rem,
    '-3': 3rem,
    '-a': auto,
  );
  $sides: (
    't': '-top',
    'b': '-bottom',
    'l': '-left',
    'r': '-right',
    '': '',
  );
  $classes: (
    'm': 'margin',
    'p': 'padding',
  );

  @each $className, $class in $classes {
    @each $sideName, $side in $sides {
      @each $sizeName, $size in $sizes {
        .#{$className}#{$sideName}#{$sizeName} {
          #{$class}#{$side}: #{$size} !important;
        }
      }
    }
  }
}
@include spacing-helper();
/*#endregion*/

.dense-1 {
  @include mat.all-component-densities(-1);
}
.dense-2 {
  @include mat.all-component-densities(-2);
}
.dense-3 {
  @include mat.all-component-densities(-3);
}
mat-form-field.width-unset .mat-mdc-form-field-infix {
  width: unset !important;
}

//#region Philip's table styles
//table.striped-hover-table highlights table rows on hover, and provides a zebra stripe pattern
//Use .override-odd or .override-even on <tr> to force the style
//Use <thead>, <tbody>, and <tfoot> and everything should format automatically
//Otherwise you can use .header-row, .body-row, and .footer-row on <tr>'s
.striped-hover-table {
  border-collapse: collapse;
  * {
    box-sizing: content-box;
    padding: 0;
  }
  .header-row,
  thead tr {
    > * {
      padding-top: 8px;
      padding-bottom: 8px;
    }
  }
  tbody tr:nth-child(odd):not(.override-even):not(.red-row):not(.highlight-row),
  tr.body-row:nth-child(odd):not(.override-even):not(.red-row):not(.highlight-row),
  tr.override-odd {
    background-color: white !important;
  }
  tbody tr:nth-child(odd):not(.override-even):not(.red-row):not(.highlight-row):hover,
  tr.body-row:nth-child(odd):not(.override-even):not(.red-row):not(.highlight-row):hover,
  tr.override-odd:hover {
    background-color: rgb(240, 240, 240) !important;
  }
  tr {
    transition: background-color 0.25s;
  }
  caption {
    text-align: left;
    font-size: 1.2em;
    padding: 8px 0 0 16px;
  }
}
.striped-hover-table:not(.table-accent) {
  .header-row,
  thead tr {
    @extend .bg-primary-200;
  }
  caption {
    @extend .bg-primary-200;
  }
  tbody tr:nth-child(even):not(.override-odd):not(.highlight-row):not(.red-row),
  tr.body-row:nth-child(even):not(.override-odd):not(.highlight-row):not(.red-row),
  tr.override-even {
    background-color: mat.get-color-from-palette($primary, 50) !important;
  }
  tbody tr:nth-child(even):not(.override-odd):not(.red-row):not(.highlight-row):hover,
  tr.body-row:nth-child(even):not(.override-odd):not(.red-row):not(.highlight-row):hover,
  tr.override-even:hover {
    background-color: mat.get-color-from-palette($primary, 100) !important;
  }
  .highlight-row:nth-child(even) {
    background-color: mat.get-color-from-palette($accent, 200) !important;
  }
  .highlight-row:nth-child(even):hover {
    background-color: mat.get-color-from-palette($accent, 300) !important;
  }
  .footer-row,
  .highlight-row:nth-child(odd),
  tfoot tr {
    background-color: mat.get-color-from-palette($accent, 100) !important;
  }
  .footer-row:hover,
  .highlight-row:nth-child(odd),
  tfoot tr:hover {
    background-color: mat.get-color-from-palette($accent, 200) !important;
  }
}
.striped-hover-table.table-accent {
  .header-row,
  thead tr {
    @extend .bg-accent-500;
  }
  caption {
    @extend .bg-accent-500;
  }
  tbody tr:nth-child(even):not(.override-odd):not(.highlight-row):not(.red-row),
  tr.body-row:nth-child(even):not(.override-odd):not(.highlight-row):not(.red-row),
  tr.override-even {
    background-color: mat.get-color-from-palette($accent, 100) !important;
  }
  tbody tr:nth-child(even):not(.override-odd):not(.red-row):not(.highlight-row):hover,
  tr.body-row:nth-child(even):not(.override-odd):not(.red-row):not(.highlight-row):hover,
  tr.override-even:hover {
    background-color: mat.get-color-from-palette($accent, 200) !important;
  }
  .highlight-row:nth-child(even) {
    background-color: mat.get-color-from-palette($primary, 200) !important;
  }
  .highlight-row:nth-child(even):hover {
    background-color: mat.get-color-from-palette($primary, 300) !important;
  }
  .footer-row,
  .highlight-row:nth-child(odd),
  tfoot tr {
    background-color: mat.get-color-from-palette($primary, 100) !important;
  }
  .footer-row:hover,
  .highlight-row:nth-child(odd):hover,
  tfoot tr:hover {
    background-color: mat.get-color-from-palette($primary, 200) !important;
  }
}
.my-dark-theme .striped-hover-table:not(.table-accent) {
  .header-row,
  thead tr,
  caption {
    background-color: mix(mat.get-color-from-palette($primary, 500), $dark-surface, 40%) !important;
  }
  tbody tr:nth-child(even):not(.override-odd):not(.red-row),
  tr.body-row:nth-child(even):not(.override-odd):not(.red-row),
  tr.override-even {
    background-color: mix(mat.get-color-from-palette($primary, 900), $dark-surface, 20%) !important;
  }
  tbody tr:nth-child(even):not(.override-odd):not(.red-row):hover,
  tr.body-row:nth-child(even):not(.override-odd):not(.red-row):hover,
  tr.override-even:hover {
    background-color: mix(mat.get-color-from-palette($primary, 800), $dark-surface, 30%) !important;
  }
  tbody tr:nth-child(odd):not(.override-even):not(.red-row),
  tr.body-row:nth-child(odd):not(.override-even):not(.red-row),
  tr.override-odd {
    background-color: rgb(66, 66, 66) !important;
  }
  tbody tr:nth-child(odd):not(.override-even):not(.red-row):hover,
  tr.body-row:nth-child(odd):not(.override-even):not(.red-row):hover,
  tr.override-odd:hover {
    background-color: rgb(76, 76, 76) !important;
  }
}
.my-dark-theme .striped-hover-table.table-accent {
  .header-row,
  thead tr,
  caption {
    background-color: mix(mat.get-color-from-palette($accent, 500), $dark-surface, 40%) !important;
  }
  tbody tr:nth-child(even):not(.override-odd):not(.red-row),
  tr.body-row:nth-child(even):not(.override-odd):not(.red-row),
  tr.override-even {
    background-color: mix(mat.get-color-from-palette($accent, 900), $dark-surface, 20%) !important;
  }
  tbody tr:nth-child(even):not(.override-odd):not(.red-row):hover,
  tr.body-row:nth-child(even):not(.override-odd):not(.red-row):hover,
  tr.override-even:hover {
    background-color: mix(mat.get-color-from-palette($accent, 800), $dark-surface, 30%) !important;
  }
  tbody tr:nth-child(odd):not(.override-even):not(.red-row),
  tr.body-row:nth-child(odd):not(.override-even):not(.red-row),
  tr.override-odd {
    background-color: rgb(66, 66, 66) !important;
  }
  tbody tr:nth-child(odd):not(.override-even):not(.red-row):hover,
  tr.body-row:nth-child(odd):not(.override-even):not(.red-row):hover,
  tr.override-odd:hover {
    background-color: rgb(76, 76, 76) !important;
  }
}
.pad-cells td,
.pad-cells th {
  padding: 0.5rem;
}
.table-stroke {
  border: 1px solid black;
  td,
  th,
  caption {
    border: 1px solid black;
  }
  caption {
    border-bottom: 0;
  }
}

//This table can automatically be broken into 2-column or 1-column mode
//Give the table .breakable-table, then optionally .one-col or .two-col
//Give table .show-prefix to start cells with their data-cell attribute
//Ensure you always include <thead>, <tbody>, and <tfoot> as applicable
.breakable-table {
  border-collapse: collapse;
  * {
    box-sizing: content-box;
    padding: 0;
  }
  .header-row,
  thead tr {
    > * {
      padding-top: 8px;
      padding-bottom: 8px;
    }
  }

  th,
  td {
    text-align: left;
  }

  .body-row th,
  tbody > tr th {
    font-weight: normal;
  }
  tr {
    > :first-child {
      padding-left: 16px;
    }
    > :last-child {
      padding-right: 16px;
    }
  }
  caption {
    @extend .bg-primary-200;
    text-align: left;
    font-size: 1.2em;
    padding: 8px 0 0 16px;
  }
  mat-form-field {
    box-sizing: border-box;
    max-width: 100%;
  }
}

@media print {
  .breakable-table * {
    overflow: visible;
  }
}
//One-column and two-column modes revert to full width when printing
@media not print {
  .breakable-table.one-col {
    thead {
      display: none;
    }
    td,
    th {
      display: block;
      padding-left: 16px;
      padding-right: 16px;
    }
    tr {
      > :first-child {
        padding-top: 8px;
      }
      > :last-child {
        padding-bottom: 8px;
      }
    }
    caption {
      padding-top: 16px;
      padding-bottom: 16px;
    }
  }

  .breakable-table.two-col {
    thead {
      display: none;
    }
    tr {
      display: flex;
      flex-wrap: wrap;
    }
    td,
    th {
      display: block;
      padding-right: 0 !important;
    }
    td:nth-child(odd),
    th:nth-child(odd) {
      padding-left: 16px;
    }
    tr {
      > :first-child,
      > :nth-child(2) {
        padding-top: 8px;
      }
      > :last-child {
        padding-bottom: 8px;
      }
    }
    caption {
      padding-top: 16px;
      padding-bottom: 16px;
    }
  }

  .breakable-table.show-prefix {
    td::before,
    th::before {
      content: attr(data-cell) ': ';
      font-weight: bold !important;
    }
  }
}

.red-row {
  background-color: rgb(255, 206, 206) !important;
}
.my-dark-theme {
  .red-row {
    background-color: rgb(109, 72, 72) !important;
  }
}
//#endregion

.w-100 {
  width: 100%;
}
.h-100 {
  height: 100%;
}
.hmin-full {
  min-height: 100vh;
}
.flex {
  display: flex;
}
.flex-row {
  display: flex;
  flex-direction: row;
}
.flex-col {
  display: flex;
  flex-direction: column;
}
.wrap {
  flex-wrap: wrap;
}
.gap-h {
  gap: 0.5rem 0.5rem;
}
.gap-1 {
  gap: 1rem 1rem;
}
.justify-even {
  justify-content: space-evenly;
}
.justify-between {
  justify-content: space-between;
}
.align-center {
  align-content: center;
  align-items: center;
}
.bold {
  font-weight: bold;
}

// Make button focus more visible, helps with accessibility
// Focus is used, instead of just focus-visible, for browser compatability
// (IE and some others don't support focus-visible)
button.focus-border:focus {
  border: 3px solid red;
}
button.focus-border[color='warn']:focus {
  border: 3px solid blue;
}
// By default, make an invisible border - prevents buttons from moving around on focus
button.focus-border:focus:not(:focus-visible),
button.focus-border:not(:focus) {
  border: 3px solid rgba(0, 0, 0, 0);
}
.focus-border-all-buttons {
  button {
    @extend .focus-border;
  }
}

// #region Text size responsivity
//Allow user to change font size with browser settings
//Text
p,
label,
span,
th,
td {
  font-size: 1rem !important;
}
h1 {
  font-size: 2rem !important;
}
h2 {
  font-size: 1.5rem !important;
}
h3 {
  font-size: 1.17rem !important;
}
h4 {
  font-size: 1rem !important;
}
h5 {
  font-size: 0.83rem !important;
}
h6 {
  font-size: 0.67rem !important;
}
h1,
h2,
h3,
h4,
h5,
h6,
p,
span,
th,
td {
  line-height: 1.2 !important;
}

//Buttons
.mat-mdc-button-base:not(.mdc-fab) {
  height: unset !important;
  padding: 0.5rem 1rem !important;
}
.dense-1 .mat-mdc-button-base:not(.mdc-fab),
.dense-1.mat-mdc-button-base:not(.mdc-fab) {
  padding: 0.4rem 0.75rem !important;
}
.dense-2 .mat-mdc-button-base:not(.mdc-fab),
.dense-2.mat-mdc-button-base:not(.mdc-fab) {
  padding: 0.25rem 0.5rem !important;
}
.dense-3 .mat-mdc-button-base:not(.mdc-fab),
.dense-3.mat-mdc-button-base:not(.mdc-fab) {
  padding: 0.1rem 0.25rem !important;
}
.dense-4 .mat-mdc-button-base:not(.mdc-fab),
.dense-4.mat-mdc-button-base:not(.mdc-fab) {
  padding: 0 0 !important;
}

//Form fields
.mat-mdc-form-field-infix {
  min-height: unset !important;
}

.mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {
  padding-top: 1.5rem;
  padding-bottom: 0.5rem;
}
.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {
  padding-top: 1rem;
  padding-bottom: 1rem;
}
.dense-1 .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {
  padding-top: 1.375rem;
  padding-bottom: 0.375rem;
}
.dense-1 .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {
  padding-top: 0.875rem;
  padding-bottom: 0.875rem;
}
.dense-2 .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix,
.dense-2 .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
.dense-3 .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix,
.dense-3 .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
}

mat-form-field input {
  // height: 1.5rem !important;
  font-size: 1rem !important;
}

.mdc-floating-label {
  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1), color 150ms cubic-bezier(0.4, 0, 0.2, 1),
    top 150ms cubic-bezier(0.4, 0, 0.2, 1);
}

.mdc-floating-label:not(.mdc-floating-label--float-above) {
  top: 1.75rem !important;
}
.dense-1 .mdc-floating-label:not(.mdc-floating-label--float-above) {
  top: 1.625rem !important;
}
.dense-2 .mdc-floating-label:not(.mdc-floating-label--float-above) {
  top: 1.5rem !important;
}
.dense-3 .mdc-floating-label:not(.mdc-floating-label--float-above) {
  top: 1.375rem !important;
}
// #endregion

.calc-input-field {
  @extend .dense-3;
  @extend .width-unset;
  min-width: 80px !important;
}
